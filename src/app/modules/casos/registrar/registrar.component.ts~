import { ClsFormCaso } from '@/app/core/classForm/cls-form-caso';
import { AuthService } from '@/app/shared/services/api/auth.service';
import { CasosService } from '@/app/shared/services/api/casos.service';
import { DocenteService } from '@/app/shared/services/api/docente.service';
import { ControlErrorService } from '@/app/shared/services/utils/controlErrorService';
import { NotificationsService } from '@/app/shared/services/utils/notifications.service';
import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-registrar',
  templateUrl: './registrar.component.html',
  styleUrls: ['./registrar.component.css'],
})
export class RegistrarComponent implements OnInit {
  public formCaso = new ClsFormCaso();
  public agregar = false;
  public teachers: any[] = [];
  public institution: any;

  constructor(
    public controlError: ControlErrorService,
    public notification: NotificationsService,
    private teacherService: DocenteService,
    private casoService: CasosService,
    private authService: AuthService,
    private router: Router,
    private route: ActivatedRoute
  ) {}

  ngOnInit(): void {
    this.formCaso.form.reset();
    this.institution = this.authService.getInstitution();
    this.getTeachers();
  }

  create() {
    const {
      ciStudent,
      nameStudent,
      lastNameStudent,
      addressStudent,
      gender,
      ageStudent,
      phoneStudent,
      gradeStudent,
      parallelStudent,
      selectTeacher,
    } = this.formCaso.form.value;

    if (selectTeacher === null && this.agregar === true) {
      this.notification.showError('Error', 'Debe seleccionar un docente');
      return;
    }

    const body = {
      idDece: this.authService.getUserId(),
      ciStudent,
      nameStudent,
      lastNameStudent,
      addressStudent,
      gender: gender,
      ageStudent,
      phoneStudent,
      gradeStudent,
      parallelStudent,
      ciTeacher: selectTeacher,
      nameInstitution: this.authService.getInstitution(),
    };

    this.casoService.createCaso(body).subscribe(
      (res) => {
        const { message, data } = res;
        this.notification.showSuccess('Exito', message);
        this.router.navigate(['/casos/listar']);
      },
      (err) => {
        this.notification.showError('Error', err.error.message);
      }
    );
  }

  getTeachers() {
    this.teacherService.getTeachersInstitutions({data:this.authService.getInstitution()}).subscribe(
    (res) => {
      const { message, data } = res;
      this.teachers = data;
      console.log(message);
    });
  }

  agregarDocente() {
    this.agregar = !this.agregar;
  }
  cancel() {
    this.router.navigate(['../listar'], { relativeTo: this.route });
  }
}
